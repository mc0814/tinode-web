{"version":3,"file":"src_views_account-settings-view_jsx.dev.js","mappings":"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","sources":["webpack://im/./src/views/account-settings-view.jsx","webpack://im/./src/widgets/credential-edit.jsx","webpack://im/./src/widgets/phone-edit.jsx"],"sourcesContent":["// Edit account parameters.\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { parsePhoneNumber } from 'libphonenumber-js/mobile';\r\n\r\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\r\nimport BadgeList from '../widgets/badge-list.jsx';\r\n\r\nimport { makeImageUrl } from '../lib/blob-helpers.js';\r\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\r\nimport CredentialEdit from '../widgets/credential-edit.jsx';\r\n\r\nfunction _clip(str, length) {\r\n  return str && str.substring(0, length);\r\n}\r\n\r\nexport default class AccountSettingsView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const me = this.props.tinode.getMeTopic();\r\n    this.state = {\r\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\r\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\r\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\r\n      credentials: me.getCredentials() || [],\r\n      credEdit: undefined,\r\n      alias: ((me.tags() || []).find(tag => tag.startsWith('alias:')) || '').substring(6),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const me = this.props.tinode.getMeTopic();\r\n    me.onCredsUpdated = _ => this.setState({credentials: me.getCredentials()});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const me = this.props.tinode.getMeTopic();\r\n    me.onCredsUpdated = null;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.credEdit) {\r\n      return (\r\n        <CredentialEdit\r\n          method={this.state.credEdit.meth}\r\n          val={this.state.credEdit.val}\r\n          done={this.state.credEdit.done}\r\n          onShowCountrySelector={this.props.onShowCountrySelector}\r\n          onCredAdd={this.props.onCredAdd}\r\n          onCredConfirm={this.props.onCredConfirm}\r\n          onCancel={_ => this.setState({credEdit: undefined})}\r\n          onError={this.props.onError} />\r\n      );\r\n    }\r\n\r\n    // Count how many times each method is validated.\r\n    const validated = {};\r\n    this.state.credentials.forEach(cred => {\r\n      if (cred.done) {\r\n        validated[cred.meth] = (validated[cred.meth] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    const credentials = [];\r\n    this.state.credentials.forEach((cred, idx) => {\r\n      if (!['email', 'tel'].includes(cred.meth)) {\r\n        // Skip unknown methods.\r\n        return ;\r\n      }\r\n\r\n      let val = cred.val\r\n      if (cred.meth == 'tel') {\r\n        const number = parsePhoneNumber(cred.val);\r\n        val = number ? number.formatInternational() : cred.val;\r\n      }\r\n\r\n      credentials.push(\r\n        <div className=\"group quoted\" key={idx}>\r\n          <tt className=\"clickable\" onClick={e => {e.preventDefault(); this.setState({credEdit: cred});}}>{val}</tt>\r\n          <span> {cred.done ? null : <i className=\"material-icons\">pending</i>}&nbsp;\r\n            {!cred.done || validated[cred.meth] > 1 || this.props.reqCredMethod != cred.meth ?\r\n              <a href=\"#\" onClick={e => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}>\r\n                <i className=\"material-icons\">delete</i>\r\n              </a>\r\n            :\r\n            null}\r\n          </span>\r\n        </div>);\r\n    });\r\n    if (credentials.length > 0) {\r\n      // Add title as the first element.\r\n      credentials.unshift(\r\n        <label className=\"small\" key={'title'}>\r\n          <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts\"\r\n            description=\"Label for user contacts\" />\r\n        </label>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"scrollable-panel\">\r\n        <div className=\"panel-form-column\">\r\n          <a href=\"#\" className=\"flat-button float-right\" onClick={e => {e.preventDefault(); this.props.onNavigate('general');}}>\r\n            <i className=\"material-icons\">edit</i>&nbsp;\r\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\r\n          </a>\r\n          <center>\r\n            <AvatarUpload\r\n              tinode={this.props.tinode}\r\n              avatar={this.state.avatar}\r\n              readOnly={true}\r\n              uid={this.props.myUserId}\r\n              title={this.state.fullName} />\r\n          </center>\r\n          <div className=\"group\">\r\n            <label className=\"small\">\r\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\r\n                description=\"Label for full name editing\" />\r\n            </label>\r\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\r\n          </div>\r\n          <div className=\"group\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\r\n              description=\"Label for user address (ID)\" /></label>&nbsp;\r\n            <tt>{this.props.myUserId}</tt>\r\n          </div>\r\n          {this.state.alias ?\r\n          <div className=\"group\">\r\n            <label className=\"small\"><FormattedMessage id=\"label_alias\" defaultMessage=\"Alias:\"\r\n              description=\"Label for user or topic alias\" /></label>&nbsp;\r\n            <tt>@{this.state.alias}</tt>\r\n          </div> : null}\r\n          <div className=\"group\">\r\n            <BadgeList trustedBadges={this.props.trustedBadges} />\r\n          </div>\r\n          {this.state.description ?\r\n            <div className=\"group\">\r\n              <label className=\"small\">\r\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\r\n                  description=\"Label for editing topic description\" />\r\n              </label>\r\n              <div className=\"quoted\">{this.state.description}</div>\r\n            </div> : null}\r\n        </div>\r\n        <div className=\"hr\" />\r\n        <div className=\"panel-form-column\">\r\n          <div className=\"group\">{credentials}</div>\r\n        </div>\r\n        <div className=\"hr\" />\r\n        <div className=\"panel-form-column\">\r\n          <a href=\"#\" className=\"flat-button\" onClick={e => {e.preventDefault(); this.props.onNavigate('notif');}}>\r\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\r\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\r\n          </a>\r\n          <a href=\"#\" className=\"flat-button\" onClick={e => {e.preventDefault(); this.props.onNavigate('security');}}>\r\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\r\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\r\n          </a>\r\n          <a href=\"#\" className=\"flat-button\" onClick={e => {e.preventDefault(); this.props.onNavigate('support');}}>\r\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\r\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","// Enter one credential at a time.\r\n\r\nimport React from 'react';\r\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\r\nimport PhoneEdit from './phone-edit.jsx';\r\nimport { parsePhoneNumber } from 'libphonenumber-js/mobile';\r\n\r\nconst messages = defineMessages({\r\n  password_reset_email_sent: {\r\n    id: 'password_reset_email_sent',\r\n    defaultMessage: 'An email with security code has been sent.',\r\n    description: 'Notification that the email with password reset instructions has been sent'\r\n  },\r\n  password_reset_sms_sent: {\r\n    id: 'password_reset_sms_sent',\r\n    defaultMessage: 'A text message with security code has been sent.',\r\n    description: 'Notification that the SMS with password reset instructions has been sent'\r\n  },\r\n});\r\n\r\nclass CredentialEdit extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      code: '',\r\n      tel: '',\r\n      email: '',\r\n      sent: false\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\r\n    this.handleCodeChange = this.handleCodeChange.bind(this);\r\n  }\r\n\r\n  static formatPhoneNumber(raw) {\r\n    let number;\r\n    try {\r\n      number = parsePhoneNumber(raw);\r\n    } catch (err) {}\r\n    return number ? number.formatInternational() : raw;\r\n  }\r\n\r\n  handleEmailChange(e) {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  handlePhoneChange(number) {\r\n    this.setState({tel: number});\r\n  }\r\n\r\n  handleCodeChange(e) {\r\n    this.setState({code: e.target.value.replace(/[^\\d]/g, '')});\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const value = this.props.method == 'email' ? this.state.email : this.state.tel;\r\n    if (this.state.code) {\r\n      this.props.onError(null);\r\n      this.props.onCredConfirm(this.props.method, this.state.code);\r\n    } else if (value) {\r\n      this.props.onCredAdd(this.props.method, value);\r\n      this.setState({sent: true});\r\n      const msg = this.props.method == 'email' ? messages.password_reset_email_sent : messages.password_reset_sms_sent;\r\n      this.props.onError(this.props.intl.formatMessage(msg), 'info');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const readyForCode = this.state.sent || !this.props.done;\r\n    const rawValue = readyForCode ? (this.state.tel || this.state.email) : this.props.val;\r\n    const formattedValue = this.props.method == 'tel' ? CredentialEdit.formatPhoneNumber(rawValue) : rawValue;\r\n\r\n    const changeEmail = (\r\n      <><div className=\"panel-form-row\">\r\n        <label className=\"large\"><FormattedMessage id=\"change_email\" defaultMessage=\"Change email\"\r\n          description=\"Prompt to change current email\" /></label>\r\n      </div>\r\n      <div className=\"group\">\r\n        <label className=\"small gray\">\r\n          <FormattedMessage id=\"current_email\" defaultMessage=\"Current email\" description=\"Label for old email\" />\r\n        </label>\r\n      </div></>);\r\n\r\n    const changePhone = (\r\n      <><div className=\"panel-form-row\">\r\n      <label className=\"large\"><FormattedMessage id=\"change_phone\" defaultMessage=\"Change phone number\"\r\n        description=\"Prompt to change current phone number\"/></label>\r\n      </div>\r\n      <div className=\"group\">\r\n        <label className=\"small gray\">\r\n          <FormattedMessage id=\"current_phone\" defaultMessage=\"Current phone number\" description=\"Label for old phone\" />\r\n        </label>\r\n      </div></>\r\n    );\r\n\r\n    const newEmailLabel = (<label className=\"small gray\">\r\n        <FormattedMessage id=\"new_email\" defaultMessage=\"New email\"\r\n          description=\"Prompt for entering a new email\" />\r\n      </label>);\r\n\r\n    const newEmailInput = (\r\n      <><div className=\"group\">{newEmailLabel}</div>\r\n      <div className=\"group\">\r\n        <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\r\n          description=\"Input placeholder for email entry\">{\r\n          (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\r\n            value={this.state.email} onChange={this.handleEmailChange} required/>\r\n        }</FormattedMessage>\r\n      </div></>\r\n    );\r\n\r\n    const newPhoneLabel = (<label className=\"small gray\">\r\n        <FormattedMessage id=\"new_phone_number\" defaultMessage=\"New phone number\"\r\n        description=\"Prompt for entering a new telephone number\" />\r\n      </label>);\r\n\r\n    const newPhoneInput = (\r\n      <><div className=\"group\">{newPhoneLabel}</div>\r\n      <div className=\"panel-form-row\">\r\n        <PhoneEdit\r\n          autoFocus={true}\r\n          onShowCountrySelector={this.props.onShowCountrySelector}\r\n          onSubmit={this.handlePhoneChange} />\r\n      </div></>\r\n    );\r\n\r\n    const codeInput = (\r\n      <><div className=\"group\">\r\n        <label className=\"small gray\"><FormattedMessage id=\"enter_confirmation_code_prompt\" defaultMessage=\"Confirmation code\"\r\n            description=\"Request to enter confirmation code\" /></label>\r\n      </div>\r\n      <div className=\"group\">\r\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\" defaultMessage=\"Numbers only\"\r\n          description=\"Prompt for numeric conformation code\">{\r\n          (numbers_only) => <input type=\"text\" placeholder={numbers_only} maxLength={10}\r\n          value={this.state.code} onChange={this.handleCodeChange} required/>\r\n        }</FormattedMessage>\r\n      </div></>\r\n    );\r\n\r\n    return (<form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\r\n      {readyForCode ?\r\n        (this.props.method == 'email' ? newEmailLabel : this.props.method == 'tel' ? newPhoneLabel : null)\r\n        :\r\n        (this.props.method == 'email' ? changeEmail : this.props.method == 'tel' ? changePhone : null)\r\n      }\r\n      <div className=\"panel-form-row\">\r\n        <tt className=\"quoted\">{formattedValue}</tt>\r\n      </div>\r\n      {readyForCode ?\r\n        null\r\n        :\r\n        (this.props.method == 'email' ? newEmailInput : this.props.method == 'tel' ? newPhoneInput : null)\r\n      }\r\n      {readyForCode ? codeInput : null}\r\n      <div className=\"dialog-buttons\">\r\n        <button className=\"secondary\" onClick={this.props.onCancel}>\r\n          <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\r\n        </button>\r\n        <button className=\"primary\" type=\"submit\" >\r\n          <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\r\n        </button>\r\n      </div>\r\n    </form>);\r\n  }\r\n}\r\n\r\nexport default injectIntl(CredentialEdit);\r\n","// Editor for a phone number.\r\n\r\nimport React from 'react';\r\nimport { defineMessages, injectIntl } from 'react-intl';\r\nimport { AsYouType, getExampleNumber, parsePhoneNumber } from 'libphonenumber-js/mobile';\r\nimport examples from 'libphonenumber-js/mobile/examples'\r\n\r\nimport * as dcodes from '../dcodes.json';\r\nimport { flagEmoji } from '../lib/strformat';\r\n\r\nconst messages = defineMessages({\r\n  mobile_number_required: {\r\n    id: 'mobile_number_required',\r\n    defaultMessage: 'Mobile phone number required',\r\n    description: 'Error message'\r\n  }\r\n});\r\n\r\nclass PhoneEdit extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.codeMap = {};\r\n    dcodes.default.forEach(dc => { this.codeMap[dc.code] = dc.dial; });\r\n\r\n    const code = props.countryCode || 'US';\r\n    const dial = this.codeMap[code];\r\n\r\n    this.state = {\r\n      countryCode: code,\r\n      dialCode: dial,\r\n      localNumber: '',\r\n      placeholderNumber: this.placeholderNumber(code, dial)\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleFinished = this.handleFinished.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.showCountrySelector = this.showCountrySelector.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const prefix = `+${this.state.dialCode}`;\r\n    let formatted = new AsYouType().input(`${prefix}${this.filterNumber(e.target.value)}`);\r\n    formatted = formatted.substring(prefix.length).trim();\r\n    this.setState({localNumber: formatted});\r\n  }\r\n\r\n  handleFinished(e) {\r\n    e.preventDefault();\r\n    const raw = `${this.state.dialCode}${this.state.localNumber.trim()}`.replace(/[^\\d]/g, '');\r\n    let number = null;\r\n    try {\r\n      number = parsePhoneNumber(`+${raw}`);\r\n    } catch (err) {}\r\n\r\n    if (!number || !number.isValid()) {\r\n      this.inputField.setCustomValidity(this.props.intl.formatMessage(messages.mobile_number_required));\r\n      return;\r\n    }\r\n\r\n    this.inputField.setCustomValidity('');\r\n    this.props.onSubmit(number.format('E.164'));\r\n  }\r\n\r\n\r\n  handleKeyDown(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleFinished(e);\r\n    }\r\n  }\r\n\r\n  showCountrySelector() {\r\n    this.props.onShowCountrySelector(this.state.countryCode, this.state.dialCode,\r\n      (code, dial) => {\r\n          this.setState({\r\n            countryCode: code,\r\n            dialCode: dial,\r\n            placeholderNumber: this.placeholderNumber(code, dial)\r\n        })\r\n      });\r\n  }\r\n\r\n  // Filter out characters not permitted in a phone number.\r\n  filterNumber(number) {\r\n    if (!number) {\r\n      return number;\r\n    }\r\n    // Leave numbers, space, (, ), -, and .\r\n    // The + is not allowed: it's handled by the country code portion.\r\n    return number.replace(/[^-\\s().\\d]/g, '');\r\n  }\r\n\r\n  placeholderNumber(code, dial) {\r\n    const sample = getExampleNumber(code, examples);\r\n    return sample ? sample.formatInternational().substring(dial.length + 1).trim() : '123 0123';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <span className=\"dial-code\" onClick={this.showCountrySelector}>\r\n          <span className=\"country-flag\">{flagEmoji(this.state.countryCode)}&nbsp;</span>\r\n          +{this.state.dialCode}&nbsp;</span>\r\n        <input type=\"tel\" ref={ref => {this.inputField = ref}} placeholder={this.state.placeholderNumber}\r\n            value={this.state.localNumber} onChange={this.handleChange}\r\n            maxLength={17} onKeyDown={this.handleKeyDown} onBlur={this.handleFinished}\r\n            required autoFocus={this.props.autoFocus} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(PhoneEdit);\r\n"],"names":["React","FormattedMessage","parsePhoneNumber","AvatarUpload","BadgeList","makeImageUrl","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","CredentialEdit","_clip","str","length","substring","AccountSettingsView","Component","constructor","props","me","tinode","getMeTopic","state","fullName","public","fn","undefined","description","note","avatar","photo","credentials","getCredentials","credEdit","alias","tags","find","tag","startsWith","componentDidMount","onCredsUpdated","_","setState","componentWillUnmount","render","createElement","method","meth","val","done","onShowCountrySelector","onCredAdd","onCredConfirm","onCancel","onError","validated","forEach","cred","idx","includes","number","formatInternational","push","className","key","onClick","e","preventDefault","reqCredMethod","href","onCredDelete","unshift","id","defaultMessage","onNavigate","readOnly","uid","myUserId","title","trustedBadges","defineMessages","injectIntl","PhoneEdit","messages","password_reset_email_sent","password_reset_sms_sent","PureComponent","code","tel","email","sent","handleSubmit","bind","handleEmailChange","handlePhoneChange","handleCodeChange","formatPhoneNumber","raw","err","target","value","replace","msg","intl","formatMessage","readyForCode","rawValue","formattedValue","changeEmail","Fragment","changePhone","newEmailLabel","newEmailInput","email_prompt","type","placeholder","autoComplete","onChange","required","newPhoneLabel","newPhoneInput","autoFocus","onSubmit","codeInput","numbers_only","maxLength","AsYouType","getExampleNumber","examples","dcodes","flagEmoji","mobile_number_required","codeMap","default","dc","dial","countryCode","dialCode","localNumber","placeholderNumber","handleChange","handleFinished","handleKeyDown","showCountrySelector","prefix","formatted","input","filterNumber","trim","isValid","inputField","setCustomValidity","format","sample","ref","onKeyDown","onBlur"],"sourceRoot":""}